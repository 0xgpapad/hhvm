# @generated by autocargo from //hphp/hack/src/hhbc/hhbc_by_ref:hhbc_by_ref_closure_convert
[package]
name = "hhbc_by_ref_closure_convert"
version = "0.0.0"
edition = "2021"

[lib]
path = "../../closure_convert.rs"

[dependencies]
bumpalo = { version = "3.8", features = ["collections"] }
emit_fatal = { path = "../../../emitter/cargo/emit_fatal" }
env = { path = "../../../emitter/cargo/env" }
global_state = { path = "../../../emitter/cargo/global_state" }
hash = { path = "../../../../utils/hash" }
hhbc_by_ref_ast_body = { path = "../hhbc_by_ref_ast_body" }
hhbc_by_ref_ast_constant_folder = { path = "../hhbc_by_ref_ast_constant_folder" }
hhbc_by_ref_ast_scope = { path = "../hhbc_by_ref_ast_scope" }
hhbc_by_ref_decl_vars = { path = "../decl_vars" }
hhbc_by_ref_hhas_coeffects = { path = "../hhbc_by_ref_hhas_coeffects" }
hhbc_by_ref_hhbc_assertion_utils = { path = "../hhbc_by_ref_hhbc_assertion_utils" }
hhbc_by_ref_hhbc_id = { path = "../hhbc_by_ref_hhbc_id" }
hhbc_by_ref_hhbc_string_utils = { path = "../hhbc_by_ref_hhbc_string_utils" }
hhbc_by_ref_options = { path = "../hhbc_by_ref_options" }
hhbc_by_ref_unique_id_builder = { path = "../hhbc_by_ref_unique_id_builder" }
hhbc_by_ref_unique_list = { path = "../unique_list" }
instruction_sequence = { path = "../../../emitter/cargo/instruction_sequence" }
itertools = "0.10.3"
naming_special_names_rust = { path = "../../../../naming" }
ocamlrep = { path = "../../../../ocamlrep" }
oxidized = { path = "../../../../oxidized" }
