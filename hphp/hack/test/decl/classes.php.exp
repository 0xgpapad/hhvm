[("\\MyClass",
  (Shallow_decl_defs.Class
     { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
       sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Cnormal;
       sc_name = ([3:7-14], "\\MyClass"); sc_tparams = [];
       sc_where_constraints = []; sc_extends = []; sc_uses = [];
       sc_xhp_attr_uses = []; sc_req_extends = []; sc_req_implements = [];
       sc_implements = []; sc_implements_dynamic = false; sc_consts = [];
       sc_typeconsts = [];
       sc_props =
       [{ Shallow_decl_defs.sp_name = ([5:17-34], "instanceProperty");
          sp_xhp_attr = None;
          sp_type =
          (Some (Rhint (root|classes.php line 5, characters 10-15),
                 (Tprim Tstring)));
          sp_visibility = Public; sp_flags = needs_init };
         { Shallow_decl_defs.sp_name = ([6:17-35], "protectedProperty");
           sp_xhp_attr = None;
           sp_type =
           (Some (Rhint (root|classes.php line 6, characters 13-15),
                  (Tprim Tint)));
           sp_visibility = Protected; sp_flags = needs_init };
         { Shallow_decl_defs.sp_name = ([7:34-36], "p"); sp_xhp_attr = None;
           sp_type =
           (Some (Rhint (root|classes.php line 7, characters 25-32),
                  (Tprim Tarraykey)));
           sp_visibility = Public; sp_flags = lateinit | needs_init }
         ];
       sc_sprops =
       [{ Shallow_decl_defs.sp_name = ([4:25-40], "$staticProperty");
          sp_xhp_attr = None;
          sp_type =
          (Some (Rhint (root|classes.php line 4, characters 18-23),
                 (Tprim Tstring)));
          sp_visibility = Private; sp_flags = needs_init }
         ];
       sc_constructor =
       (Some { Shallow_decl_defs.sm_name = ([9:19-30], "__construct");
               sm_reactivity = None;
               sm_type =
               (Rwitness (root|classes.php line 9, characters 19-29),
                (Tfun
                   { ft_arity = (Fstandard ()); ft_tparams = [];
                     ft_where_constraints = []; ft_params = [];
                     ft_implicit_params =
                     { capability = (CapDefaults [9:19-30]) };
                     ft_ret =
                     { et_enforced = false;
                       et_type =
                       (Rwitness (root|classes.php line 9, characters 19-29),
                        (Tprim Tvoid))
                       };
                     ft_flags =
                     (make_ft_flags FSync None ~return_disposable:false
                       ~returns_mutable:false ~returns_void_to_rx:false
                       ~returns_readonly:false ~readonly_this:false
                       ~is_const:false);
                     ft_reactive = Nonreactive;
                     ft_ifc_decl = FDPolicied {PUBLIC} }));
               sm_visibility = Public; sm_deprecated = None;
               sm_flags = (empty) });
       sc_static_methods = [];
       sc_methods =
       [{ Shallow_decl_defs.sm_name = ([11:20-33], "privateMethod");
          sm_reactivity = None;
          sm_type =
          (Rwitness (root|classes.php line 11, characters 20-32),
           (Tfun
              { ft_arity = (Fstandard ()); ft_tparams = [];
                ft_where_constraints = []; ft_params = [];
                ft_implicit_params =
                { capability = (CapDefaults [11:20-33]) };
                ft_ret =
                { et_enforced = false;
                  et_type =
                  (Rhint (root|classes.php line 11, characters 37-40),
                   (Tprim Tvoid))
                  };
                ft_flags =
                (make_ft_flags FSync None ~return_disposable:false
                  ~returns_mutable:false ~returns_void_to_rx:false
                  ~returns_readonly:false ~readonly_this:false
                  ~is_const:false);
                ft_reactive = Nonreactive; ft_ifc_decl = FDPolicied {PUBLIC}
                }));
          sm_visibility = Private; sm_deprecated = None; sm_flags = (empty) };
         { Shallow_decl_defs.sm_name = ([12:19-31], "publicMethod");
           sm_reactivity = None;
           sm_type =
           (Rwitness (root|classes.php line 12, characters 19-30),
            (Tfun
               { ft_arity = (Fstandard ()); ft_tparams = [];
                 ft_where_constraints = []; ft_params = [];
                 ft_implicit_params =
                 { capability = (CapDefaults [12:19-31]) };
                 ft_ret =
                 { et_enforced = false;
                   et_type =
                   (Rhint (root|classes.php line 12, characters 35-38),
                    (Tprim Tvoid))
                   };
                 ft_flags =
                 (make_ft_flags FSync None ~return_disposable:false
                   ~returns_mutable:false ~returns_void_to_rx:false
                   ~returns_readonly:false ~readonly_this:false
                   ~is_const:false);
                 ft_reactive = Nonreactive; ft_ifc_decl = FDPolicied {PUBLIC}
                 }));
           sm_visibility = Public; sm_deprecated = None; sm_flags = (empty) };
         { Shallow_decl_defs.sm_name = ([13:22-37], "protectedMethod");
           sm_reactivity = None;
           sm_type =
           (Rwitness (root|classes.php line 13, characters 22-36),
            (Tfun
               { ft_arity = (Fstandard ()); ft_tparams = [];
                 ft_where_constraints = []; ft_params = [];
                 ft_implicit_params =
                 { capability = (CapDefaults [13:22-37]) };
                 ft_ret =
                 { et_enforced = false;
                   et_type =
                   (Rhint (root|classes.php line 13, characters 41-44),
                    (Tprim Tvoid))
                   };
                 ft_flags =
                 (make_ft_flags FSync None ~return_disposable:false
                   ~returns_mutable:false ~returns_void_to_rx:false
                   ~returns_readonly:false ~readonly_this:false
                   ~is_const:false);
                 ft_reactive = Nonreactive; ft_ifc_decl = FDPolicied {PUBLIC}
                 }));
           sm_visibility = Protected; sm_deprecated = None;
           sm_flags = (empty) };
         { Shallow_decl_defs.sm_name = ([14:25-40], "async_generator");
           sm_reactivity = None;
           sm_type =
           (Rwitness (root|classes.php line 14, characters 25-39),
            (Tfun
               { ft_arity = (Fstandard ()); ft_tparams = [];
                 ft_where_constraints = [];
                 ft_params =
                 [{ fp_pos = [15:12-17]; fp_name = (Some "$arg1");
                    fp_type =
                    { et_enforced = false;
                      et_type =
                      (Rhint (root|classes.php line 15, characters 5-10),
                       (Tprim Tstring))
                      };
                    fp_rx_annotation = None;
                    fp_flags =
                    (make_fp_flags ~mutability:None ~accept_disposable:false
                      ~has_default:false ~mode:Typing_defs_core.FPnormal
                      ~ifc_external:false ~ifc_can_call:false ~is_atom:false
                      ~readonly:false ~const_function:false);
                     };
                   { fp_pos = [16:9-14]; fp_name = (Some "$arg2");
                     fp_type =
                     { et_enforced = false;
                       et_type =
                       (Rhint (root|classes.php line 16, characters 5-7),
                        (Tprim Tint))
                       };
                     fp_rx_annotation = None;
                     fp_flags =
                     (make_fp_flags ~mutability:None ~accept_disposable:false
                       ~has_default:false ~mode:Typing_defs_core.FPnormal
                       ~ifc_external:false ~ifc_can_call:false ~is_atom:false
                       ~readonly:false ~const_function:false);
                      }
                   ];
                 ft_implicit_params =
                 { capability = (CapDefaults [14:25-40]) };
                 ft_ret =
                 { et_enforced = false;
                   et_type =
                   (Rhint (root|classes.php line 17, characters 6-41),
                    (Tapply (([17:6-23], "\\HH\\AsyncGenerator"),
                       [(Rhint (root|classes.php line 17, characters 24-26),
                         (Tprim Tint));
                         (Rhint (root|classes.php line 17, characters 29-34),
                          (Tprim Tstring));
                         (Rhint (root|classes.php line 17, characters 37-40),
                          (Tprim Tvoid))
                         ]
                       )))
                   };
                 ft_flags =
                 (make_ft_flags FAsyncGenerator None ~return_disposable:false
                   ~returns_mutable:false ~returns_void_to_rx:false
                   ~returns_readonly:false ~readonly_this:false
                   ~is_const:false);
                 ft_reactive = Nonreactive; ft_ifc_decl = FDPolicied {PUBLIC}
                 }));
           sm_visibility = Public; sm_deprecated = None; sm_flags = (empty) }
         ];
       sc_user_attributes = []; sc_enum_type = None }));
  ("\\MyAbstractClass",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Cabstract;
        sc_name = ([23:16-31], "\\MyAbstractClass"); sc_tparams = [];
        sc_where_constraints = []; sc_extends = []; sc_uses = [];
        sc_xhp_attr_uses = []; sc_req_extends = []; sc_req_implements = [];
        sc_implements = []; sc_implements_dynamic = false; sc_consts = [];
        sc_typeconsts = []; sc_props = []; sc_sprops = [];
        sc_constructor = None; sc_static_methods = []; sc_methods = [];
        sc_user_attributes = []; sc_enum_type = None }));
  ("\\MyFinalClass",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = true;
        sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Cnormal;
        sc_name = ([24:13-25], "\\MyFinalClass"); sc_tparams = [];
        sc_where_constraints = []; sc_extends = []; sc_uses = [];
        sc_xhp_attr_uses = []; sc_req_extends = []; sc_req_implements = [];
        sc_implements = []; sc_implements_dynamic = false; sc_consts = [];
        sc_typeconsts = []; sc_props = []; sc_sprops = [];
        sc_constructor = None; sc_static_methods = []; sc_methods = [];
        sc_user_attributes = []; sc_enum_type = None }));
  ("\\MyStaticClass",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = true;
        sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Cabstract;
        sc_name = ([25:22-35], "\\MyStaticClass"); sc_tparams = [];
        sc_where_constraints = []; sc_extends = []; sc_uses = [];
        sc_xhp_attr_uses = []; sc_req_extends = []; sc_req_implements = [];
        sc_implements = []; sc_implements_dynamic = false; sc_consts = [];
        sc_typeconsts = []; sc_props = []; sc_sprops = [];
        sc_constructor = None; sc_static_methods = []; sc_methods = [];
        sc_user_attributes = []; sc_enum_type = None }));
  ("\\MyConstructorPropertiesClass",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Cnormal;
        sc_name = ([27:7-35], "\\MyConstructorPropertiesClass");
        sc_tparams = []; sc_where_constraints = []; sc_extends = [];
        sc_uses = []; sc_xhp_attr_uses = []; sc_req_extends = [];
        sc_req_implements = []; sc_implements = [];
        sc_implements_dynamic = false; sc_consts = []; sc_typeconsts = [];
        sc_props =
        [{ Shallow_decl_defs.sp_name = ([29:20-28], "private");
           sp_xhp_attr = None;
           sp_type =
           (Some (Rhint (root|classes.php line 29, characters 13-18),
                  (Tprim Tstring)));
           sp_visibility = Private; sp_flags = needs_init };
          { Shallow_decl_defs.sp_name = ([30:22-32], "protected");
            sp_xhp_attr = None;
            sp_type =
            (Some (Rhint (root|classes.php line 30, characters 15-20),
                   (Tprim Tstring)));
            sp_visibility = Protected; sp_flags = needs_init };
          { Shallow_decl_defs.sp_name = ([31:19-26], "public");
            sp_xhp_attr = None;
            sp_type =
            (Some (Rhint (root|classes.php line 31, characters 12-17),
                   (Tprim Tstring)));
            sp_visibility = Public; sp_flags = needs_init };
          { Shallow_decl_defs.sp_name = ([32:19-30], "hasDefault");
            sp_xhp_attr = None;
            sp_type =
            (Some (Rhint (root|classes.php line 32, characters 12-17),
                   (Tprim Tstring)));
            sp_visibility = Public; sp_flags = needs_init }
          ];
        sc_sprops = [];
        sc_constructor =
        (Some { Shallow_decl_defs.sm_name = ([28:19-30], "__construct");
                sm_reactivity = None;
                sm_type =
                (Rwitness (root|classes.php line 28, characters 19-29),
                 (Tfun
                    { ft_arity = (Fstandard ()); ft_tparams = [];
                      ft_where_constraints = [];
                      ft_params =
                      [{ fp_pos = [29:20-28]; fp_name = (Some "$private");
                         fp_type =
                         { et_enforced = false;
                           et_type =
                           (Rhint (root|classes.php line 29, characters 13-18),
                            (Tprim Tstring))
                           };
                         fp_rx_annotation = None;
                         fp_flags =
                         (make_fp_flags ~mutability:None
                           ~accept_disposable:false ~has_default:false
                           ~mode:Typing_defs_core.FPnormal
                           ~ifc_external:false ~ifc_can_call:false
                           ~is_atom:false ~readonly:false
                           ~const_function:false);
                          };
                        { fp_pos = [30:22-32]; fp_name = (Some "$protected");
                          fp_type =
                          { et_enforced = false;
                            et_type =
                            (Rhint (root|classes.php line 30, characters 15-20),
                             (Tprim Tstring))
                            };
                          fp_rx_annotation = None;
                          fp_flags =
                          (make_fp_flags ~mutability:None
                            ~accept_disposable:false ~has_default:false
                            ~mode:Typing_defs_core.FPnormal
                            ~ifc_external:false ~ifc_can_call:false
                            ~is_atom:false ~readonly:false
                            ~const_function:false);
                           };
                        { fp_pos = [31:19-26]; fp_name = (Some "$public");
                          fp_type =
                          { et_enforced = false;
                            et_type =
                            (Rhint (root|classes.php line 31, characters 12-17),
                             (Tprim Tstring))
                            };
                          fp_rx_annotation = None;
                          fp_flags =
                          (make_fp_flags ~mutability:None
                            ~accept_disposable:false ~has_default:false
                            ~mode:Typing_defs_core.FPnormal
                            ~ifc_external:false ~ifc_can_call:false
                            ~is_atom:false ~readonly:false
                            ~const_function:false);
                           };
                        { fp_pos = [32:19-30];
                          fp_name = (Some "$hasDefault");
                          fp_type =
                          { et_enforced = false;
                            et_type =
                            (Rhint (root|classes.php line 32, characters 12-17),
                             (Tprim Tstring))
                            };
                          fp_rx_annotation = None;
                          fp_flags =
                          (make_fp_flags ~mutability:None
                            ~accept_disposable:false ~has_default:true
                            ~mode:Typing_defs_core.FPnormal
                            ~ifc_external:false ~ifc_can_call:false
                            ~is_atom:false ~readonly:false
                            ~const_function:false);
                           }
                        ];
                      ft_implicit_params =
                      { capability = (CapDefaults [28:19-30]) };
                      ft_ret =
                      { et_enforced = false;
                        et_type =
                        (Rwitness (root|classes.php line 28, characters 19-29),
                         (Tprim Tvoid))
                        };
                      ft_flags =
                      (make_ft_flags FSync None ~return_disposable:false
                        ~returns_mutable:false ~returns_void_to_rx:false
                        ~returns_readonly:false ~readonly_this:false
                        ~is_const:false);
                      ft_reactive = Nonreactive;
                      ft_ifc_decl = FDPolicied {PUBLIC} }));
                sm_visibility = Public; sm_deprecated = None;
                sm_flags = (empty) });
        sc_static_methods = []; sc_methods = []; sc_user_attributes = [];
        sc_enum_type = None }))
  ]

They matched!
