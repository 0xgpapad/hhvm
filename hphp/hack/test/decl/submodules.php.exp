File root|submodules.php--A.php
[("\\internal_function_in_parent",
  (Shallow_decl_defs.Fun
     { Typing_defs.fe_deprecated = None; fe_module = (Some ([4:54-57], "A"));
       fe_internal = true;
       fe_type =
       (Rwitness_from_decl ([7:10-37]),
        (Tfun
           { ft_arity = (Fstandard ()); ft_tparams = [];
             ft_where_constraints = []; ft_params = [];
             ft_implicit_params = { capability = (CapDefaults [7:10-37]) };
             ft_ret =
             { et_enforced = Typing_defs_core.Unenforced;
               et_type = (Rhint ([7:41-45]), (Tprim Tvoid)) };
             ft_flags =
             (make_ft_flags FSync ~return_disposable:false
               ~returns_readonly:false ~support_dynamic_type:false
               ~readonly_this:false ~is_memoized:false);
             ft_ifc_decl = FDPolicied {PUBLIC} }));
       fe_pos = [7:10-37]; fe_php_std_lib = false;
       fe_support_dynamic_type = false }))
  ]

File root|submodules.php--AB.php
[("\\call_internal_functions",
  (Shallow_decl_defs.Fun
     { Typing_defs.fe_deprecated = None;
       fe_module = (Some ([3:54-59], "A.B")); fe_internal = false;
       fe_type =
       (Rwitness_from_decl ([6:10-33]),
        (Tfun
           { ft_arity = (Fstandard ()); ft_tparams = [];
             ft_where_constraints = []; ft_params = [];
             ft_implicit_params = { capability = (CapDefaults [6:10-33]) };
             ft_ret =
             { et_enforced = Typing_defs_core.Unenforced;
               et_type = (Rhint ([6:37-41]), (Tprim Tvoid)) };
             ft_flags =
             (make_ft_flags FSync ~return_disposable:false
               ~returns_readonly:false ~support_dynamic_type:false
               ~readonly_this:false ~is_memoized:false);
             ft_ifc_decl = FDPolicied {PUBLIC} }));
       fe_pos = [6:10-33]; fe_php_std_lib = false;
       fe_support_dynamic_type = false }))
  ]

File root|submodules.php--ABC.php
[("\\internal_function_in_child",
  (Shallow_decl_defs.Fun
     { Typing_defs.fe_deprecated = None;
       fe_module = (Some ([3:54-61], "A.B.C")); fe_internal = true;
       fe_type =
       (Rwitness_from_decl ([6:10-36]),
        (Tfun
           { ft_arity = (Fstandard ()); ft_tparams = [];
             ft_where_constraints = []; ft_params = [];
             ft_implicit_params = { capability = (CapDefaults [6:10-36]) };
             ft_ret =
             { et_enforced = Typing_defs_core.Unenforced;
               et_type = (Rhint ([6:40-44]), (Tprim Tvoid)) };
             ft_flags =
             (make_ft_flags FSync ~return_disposable:false
               ~returns_readonly:false ~support_dynamic_type:false
               ~readonly_this:false ~is_memoized:false);
             ft_ifc_decl = FDPolicied {PUBLIC} }));
       fe_pos = [6:10-36]; fe_php_std_lib = false;
       fe_support_dynamic_type = false }))
  ]

File root|submodules.php--D.php
[("\\disjoint_module_call_non_internal",
  (Shallow_decl_defs.Fun
     { Typing_defs.fe_deprecated = None; fe_module = (Some ([3:54-57], "D"));
       fe_internal = false;
       fe_type =
       (Rwitness_from_decl ([6:10-43]),
        (Tfun
           { ft_arity = (Fstandard ()); ft_tparams = [];
             ft_where_constraints = []; ft_params = [];
             ft_implicit_params = { capability = (CapDefaults [6:10-43]) };
             ft_ret =
             { et_enforced = Typing_defs_core.Unenforced;
               et_type = (Rhint ([6:47-51]), (Tprim Tvoid)) };
             ft_flags =
             (make_ft_flags FSync ~return_disposable:false
               ~returns_readonly:false ~support_dynamic_type:false
               ~readonly_this:false ~is_memoized:false);
             ft_ifc_decl = FDPolicied {PUBLIC} }));
       fe_pos = [6:10-43]; fe_php_std_lib = false;
       fe_support_dynamic_type = false }))
  ]

File root|submodules.php--no-module.php
[("\\non_module_call_internal",
  (Shallow_decl_defs.Fun
     { Typing_defs.fe_deprecated = None; fe_module = None;
       fe_internal = false;
       fe_type =
       (Rwitness_from_decl ([3:10-34]),
        (Tfun
           { ft_arity = (Fstandard ()); ft_tparams = [];
             ft_where_constraints = []; ft_params = [];
             ft_implicit_params = { capability = (CapDefaults [3:10-34]) };
             ft_ret =
             { et_enforced = Typing_defs_core.Unenforced;
               et_type = (Rhint ([3:38-42]), (Tprim Tvoid)) };
             ft_flags =
             (make_ft_flags FSync ~return_disposable:false
               ~returns_readonly:false ~support_dynamic_type:false
               ~readonly_this:false ~is_memoized:false);
             ft_ifc_decl = FDPolicied {PUBLIC} }));
       fe_pos = [3:10-34]; fe_php_std_lib = false;
       fe_support_dynamic_type = false }))
  ]

They matched!
